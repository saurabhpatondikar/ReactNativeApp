// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render App correctly or not 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
                "marginTop": 0,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#000000",
                            "flex": 1,
                            "padding": 0,
                          },
                        ]
                      }
                    >
                      <Modal
                        hardwareAccelerated={false}
                        onRequestClose={[Function]}
                        theme={
                          Object {
                            "colors": Object {
                              "black": "#242424",
                              "disabled": "hsl(208, 8%, 90%)",
                              "divider": "#bcbbc1",
                              "error": "#ff190c",
                              "grey0": "#393e42",
                              "grey1": "#43484d",
                              "grey2": "#5e6977",
                              "grey3": "#86939e",
                              "grey4": "#bdc6cf",
                              "grey5": "#e1e8ee",
                              "greyOutline": "#bbb",
                              "platform": Object {
                                "android": Object {
                                  "error": "#f44336",
                                  "grey": "rgba(0, 0, 0, 0.54)",
                                  "primary": "#2196f3",
                                  "searchBg": "#dcdce1",
                                  "secondary": "#9C27B0",
                                  "success": "#4caf50",
                                  "warning": "#ffeb3b",
                                },
                                "default": Object {
                                  "error": "#ff3b30",
                                  "grey": "#7d7d7d",
                                  "primary": "#007aff",
                                  "searchBg": "#dcdce1",
                                  "secondary": "#5856d6",
                                  "success": "#4cd964",
                                  "warning": "#ffcc00",
                                },
                                "ios": Object {
                                  "error": "#ff3b30",
                                  "grey": "#7d7d7d",
                                  "primary": "#007aff",
                                  "searchBg": "#dcdce1",
                                  "secondary": "#5856d6",
                                  "success": "#4cd964",
                                  "warning": "#ffcc00",
                                },
                                "web": Object {
                                  "error": "#ff190c",
                                  "grey": "#393e42",
                                  "primary": "#2089dc",
                                  "searchBg": "#303337",
                                  "secondary": "#ca71eb",
                                  "success": "#52c41a",
                                  "warning": "#faad14",
                                },
                              },
                              "primary": "#2089dc",
                              "searchBg": "#303337",
                              "secondary": "#ca71eb",
                              "success": "#52c41a",
                              "warning": "#faad14",
                              "white": "#ffffff",
                            },
                          }
                        }
                        transparent={true}
                        visible={false}
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "rgba(0, 0, 0, .4)",
                              "height": "100%",
                              "justifyContent": "center",
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": "100%",
                            }
                          }
                          testID="RNE__Overlay__backdrop"
                        />
                        <View
                          pointerEvents="box-none"
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderRadius": 3,
                                "height": "100%",
                                "justifyContent": "center",
                                "padding": 0,
                                "shadowColor": "rgba(0, 0, 0, .3)",
                                "shadowOffset": Object {
                                  "height": 1,
                                  "width": 0,
                                },
                                "shadowRadius": 4,
                                "width": "100%",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderRadius": 10,
                                    "height": "25%",
                                    "width": "90%",
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#808080",
                                      "fontSize": 18,
                                      "position": "absolute",
                                      "top": 45,
                                    },
                                  ]
                                }
                              >
                                Application Running on  device
                              </Text>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#2196F3",
                                    "borderRadius": 8,
                                    "bottom": 0,
                                    "height": 55,
                                    "justifyContent": "center",
                                    "marginBottom": 10,
                                    "opacity": 1,
                                    "position": "absolute",
                                    "width": "30%",
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#ffffff",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  Close
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </Modal>
                      <View
                        style={
                          Array [
                            Object {
                              "flex": 0.5,
                            },
                            Object {
                              "alignItems": "center",
                              "justifyContent": "center",
                            },
                          ]
                        }
                      >
                        <TextInput
                          allowFontScaling={true}
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          placeholder="Please Enter Your Name"
                          rejectResponderTermination={true}
                          style={
                            Array [
                              Object {
                                "alignSelf": "center",
                                "backgroundColor": "#ffffff",
                                "borderRadius": 10,
                                "borderWidth": 1,
                                "height": 56,
                                "marginTop": 15,
                                "padding": 10,
                                "width": "95%",
                              },
                            ]
                          }
                          underlineColorAndroid="transparent"
                          value=""
                        />
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "flex": 0.5,
                            },
                            Object {
                              "alignItems": "center",
                              "justifyContent": "center",
                            },
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#2196F3",
                              "borderRadius": 10,
                              "height": 60,
                              "justifyContent": "center",
                              "marginBottom": 15,
                              "opacity": 0.5,
                              "width": "95%",
                            }
                          }
                          testID="button"
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#2196F3",
                                  "fontSize": 16,
                                },
                                Object {
                                  "color": "#ffffff",
                                },
                              ]
                            }
                            testID="button_text"
                          >
                            Press Me
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        Object {
          "height": 64,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 1,
        }
      }
    />
  </RNCSafeAreaProvider>
</View>
`;
